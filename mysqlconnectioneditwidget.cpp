#include "mysqlconnectioneditwidget.h"
#include "ui_mysqlconnectioneditwidget.h"

#include <QDebug>

MysqlConnectionEditWidget::MysqlConnectionEditWidget(QWidget *parent, QMap<QString, QMap<QString, ConnectionInfo*> >* connections) :
    QWidget(parent),
    ui(new Ui::MysqlConnectionEditWidget),
    connections(connections)
{
    ui->setupUi(this);
}

void MysqlConnectionEditWidget::parseConnectionInfo(ConnectionInfo *connectionInfo) {
    if ("MYSQL" != connectionInfo->getConnectionType()) {
        return;
    }

    currentConnectionInfo = connectionInfo;

    if (true == connectionInfo->isConnectionNameAutogenerated()) {
        this->ui->connectionNameEdit->setPlaceholderText(connectionInfo->getConnectionName());
    } else {
        this->ui->connectionNameEdit->setText(connectionInfo->getConnectionName());
    }
    this->ui->hostEdit->setText(connectionInfo->getHost());
    this->ui->userEdit->setText(connectionInfo->getUser());
    this->ui->passwordEdit->setText(connectionInfo->getPassword());
    this->ui->portEdit->setText(QString::number(connectionInfo->getPort()));
}

void MysqlConnectionEditWidget::save() {
    qDebug() << currentConnectionInfo->getConnectionName();
    if (!this->ui->connectionNameEdit->text().isEmpty()) {
        currentConnectionInfo->setConnectionName(this->ui->connectionNameEdit->text());
        currentConnectionInfo->setConnectionNameAutoGenerated(false);
    }
    if (!this->ui->hostEdit->text().isEmpty()) {
        currentConnectionInfo->setHost(this->ui->hostEdit->text());
    }
    if (0 < this->ui->portEdit->text().toUInt()) {
        currentConnectionInfo->setPort(this->ui->portEdit->text().toUInt());
    }
    if (!this->ui->userEdit->text().isEmpty()) {
        currentConnectionInfo->setUser(this->ui->userEdit->text());
    }
    if (!this->ui->passwordEdit->text().isEmpty()) {
        currentConnectionInfo->setPassword(this->ui->passwordEdit->text());
    }
    if (!this->ui->databaseEdit->text().isEmpty()) {
        currentConnectionInfo->setDatabaseName(this->ui->databaseEdit->text());
    }

//    emit connections->
}

MysqlConnectionEditWidget::~MysqlConnectionEditWidget()
{
    delete ui;
}
